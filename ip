#!/bin/bash
# (C) Copyright 2022-2023
# ==================================================================
# Name        : VPN Script Auto Installation Script
# Created     : ( 26 May 2023 )
# OS Support  : Ubuntu & Debian
# Auther      : Manternet
# ==================================================================

function data_colour() {
        # // Export Color & Information
        export RED='\033[0;31m';
        export GREEN='\033[0;32m';
        export YELLOW='\033[0;33m';
        export LIGHT='\033[0;37m';
        export NC='\033[0m';
        # // Export Banner Status Information
        export ERROR="[${RED} ERROR ${NC}]";
        export INFO="[${YELLOW} INFO ${NC}]";
        export OKEY="[${RED} OKEY ${NC}]";
        # // Github user
        export GIT_NYA="https://"
	export USER_NYA="https://"
        # // Exporting maklumat rangkaian
	source /root/ip-detail.txt;
        export domain=$(cat /usr/local/etc/xray/domain);
 	export IP_NYA="$IP";
}

function install_xray() {
        if [[ ! -d "/usr/local/bin/xray" ]]; then
            clear; echo -e ""; echo -e "${ERROR} Directory is not detected !"; exit 0;
        fi
            echo -e "${BLUE}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}";
            echo -e "                  ${RED}•••${NC} [ ${BG}XRAY UPDATE VERSION${NC} ] ${RED}•••${NC}";
            echo -e "${BLUE}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}";
            echo -e "";
            curl -s "https://api.github.com/repos/XTLS/Xray-core/releases?per_page=5" | jq -r ".[]|select (.prerelease==false) |.tag_name" | awk '{print "(${CYAN}"NR"${NC})${RED}•${NC} ${LIGHT}Xray-core official"" = ${NC}"$0}'
          #  echo -e " (${CYAN}01${NC}) ${RED}•${NC} ${LIGHT}Xray-core official prerelease ${XRAY_OFF1}${NC}";
         #   echo -e " (${CYAN}02${NC}) ${RED}•${NC} ${LIGHT}Xray-core official releases ${XRAY_OFF2}${NC}";
            #echo -e " (${CYAN}03${NC}) ${RED}•${NC} ${LIGHT}Xray-core Mods ${XRAY_OFF3}${NC}";
            echo -e "";
            echo -e " (${RED}00${NC}) ${RED}•${NC} ${LIGHT}Back to menu${NC}";
            echo -e "";
            echo -e "${BLUE}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}";
            echo -e -n " ${LIGHT}Select menu (${GREEN} 0 - 3 ${NC}${LIGHT})${NC} = "; read xraytype
            export version=$(curl -s "https://api.github.com/repos/XTLS/Xray-core/releases?per_page=5" | jq -r ".[]|select (.prerelease==false)|.tag_name" | awk '{print ""NR"""="$0}' | grep "${xraytype}=" | awk -F "[=]" '{print $2}')
            if [[ "${xraytype}" == "1" | "${xraytype}" == "2"  ]]; then
                wget -c -P /usr/local/bin/ "https://github.com/XTLS/Xray-core/releases/download/${version}/Xray-linux-64.zip";
	        unzip -o /usr/local/bin/Xray-linux-64.zip -d /usr/local/bin/;
                rm -rf /usr/local/bin/Xray-linux-64.zip;
	        chmod 655 /usr/local/bin/xray;

            elif [[ "${xraytype}" == "3" ]]; then
                  wget -q -O /usr/local/bin/ "https://github.com/dharak36/Xray-core/releases/download/${version}/xray.linux.64bit";
                  chmod 655 /usr/local/bin/xray;
             else
                clear; echo -e " ${ERROR} Please Input The Correct Number !";
             fi
}
            

updateXray() {
    readInstallType
    if [[ -z "${coreInstallType}" ]]; then
        if [[ -n "$1" ]]; then
            version=$1
        else
            version=$(curl -s "https://api.github.com/repos/XTLS/Xray-core/releases?per_page=1" | jq -r ".[]|select (.prerelease==${prereleaseStatus})|.tag_name")
        fi

        echoContent green " ---> Xray-core版本:${version}"

        wget -c -q "${wgetShowProgressStatus}" -P /etc/v2ray-agent/xray/ "https://github.com/XTLS/Xray-core/releases/download/${version}/${xrayCoreCPUVendor}.zip"

        unzip -o "/etc/v2ray-agent/xray/${xrayCoreCPUVendor}.zip" -d /etc/v2ray-agent/xray >/dev/null
        rm -rf "/etc/v2ray-agent/xray/${xrayCoreCPUVendor}.zip"
        chmod 655 /etc/v2ray-agent/xray/xray
        handleXray stop
        handleXray start
    else
        echoContent green " ---> 当前Xray-core版本:$(/etc/v2ray-agent/xray/xray --version | awk '{print $2}' | head -1)"

        if [[ -n "$1" ]]; then
            version=$1
        else
            version=$(curl -s "https://api.github.com/repos/XTLS/Xray-core/releases?per_page=1" | jq -r ".[].tag_name")
        fi

        if [[ -n "$1" ]]; then
            read -r -p "回退版本为${version}，是否继续？[y/n]:" rollbackXrayStatus
            if [[ "${rollbackXrayStatus}" == "y" ]]; then
                echoContent green " ---> 当前Xray-core版本:$(/etc/v2ray-agent/xray/xray --version | awk '{print $2}' | head -1)"

                handleXray stop
                rm -f /etc/v2ray-agent/xray/xray
                updateXray "${version}"
            else
                echoContent green " ---> 放弃回退版本"
            fi
        elif [[ "${version}" == "v$(/etc/v2ray-agent/xray/xray --version | awk '{print $2}' | head -1)" ]]; then
            read -r -p "当前版本与最新版相同，是否重新安装？[y/n]:" reInstallXrayStatus
            if [[ "${reInstallXrayStatus}" == "y" ]]; then
                handleXray stop
                rm -f /etc/v2ray-agent/xray/xray
                rm -f /etc/v2ray-agent/xray/xray
                updateXray
            else
                echoContent green " ---> 放弃重新安装"
            fi
        else
            read -r -p "最新版本为:${version}，是否更新？[y/n]:" installXrayStatus
            if [[ "${installXrayStatus}" == "y" ]]; then
                rm -f /etc/v2ray-agent/xray/xray
                updateXray
            else
                echoContent green " ---> 放弃更新"
            fi

        fi
    fi
}
